openapi: 3.0.1
info:
  title: In-Memory Ledger API
  description: A simple ledger system for managing transactions and accounts using double-entry bookkeeping.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1/ledger
    description: Local Development Server

paths:
  /accounts:
    post:
      summary: Create a new account
      description: Creates a new account with the specified name and type.
      operationId: createAccount
      parameters:
        - name: name
          in: query
          description: The name of the account.
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: The type of the account (e.g., Asset, Liability, Expense).
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Account successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Invalid input

    get:
      summary: Retrieve all accounts
      description: Returns a list of all created accounts.
      operationId: getAccounts
      responses:
        '200':
          description: A list of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '500':
          description: Server error occurred while retrieving accounts

  /transactions:
    post:
      summary: Create a new transaction
      operationId: createTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '201':
          description: Transaction successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid input
        '500':
          description: Server error

  /accounts/{accountId}/balance:
    get:
      summary: Get the balance of an account
      description: Retrieves the current balance of the specified account.
      operationId: getAccountBalance
      parameters:
        - name: accountId
          in: path
          required: true
          description: The ID of the account to retrieve the balance for
          schema:
            type: integer
      responses:
        '200':
          description: The current balance of the account
          content:
            application/json:
              schema:
                type: number
                format: double
                description: The balance of the account
        '404':
          description: Account not found

  /transactions/history:
    get:
      summary: Get the transaction history
      description: Retrieves the history of all transactions in the system.
      operationId: getTransactionHistory
      responses:
        '200':
          description: A list of all transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionHistory'
        '500':
          description: Server error

components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the account
        name:
          type: string
          description: The name of the account
        type:
          type: string
          enum: [Asset, Liability]
          description: The type of entry (either Asset or Liability)
        balance:
          type: number
          format: double
          description: The balance of the account

    TransactionRequest:
      type: object
      properties:
        description:
          type: string
          description: The description of the transaction
        entries:
          type: array
          items:
            type: object
            properties:
              account:
                $ref: '#/components/schemas/Account'
              amount:
                type: number
                format: double
                description: The amount of the debit or credit
              entryType:
                type: string
                enum: [Debit, Credit]
                description: The type of entry (either Debit or Credit)
      required:
        - description
        - entries

    Transaction:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the transaction
        description:
          type: string
          description: The description of the transaction
        date:
          type: string
          format: date-time
          description: The date of the transaction
        entries:
          type: array
          items:
            type: object
            properties:
              account:
                $ref: '#/components/schemas/Account'
              amount:
                type: number
                format: double
                description: The amount of the debit or credit
              entryType:
                type: string
                enum: [Debit, Credit]
                description: The type of entry (either Debit or Credit)

    TransactionHistory:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the transaction
        description:
          type: string
          description: The description of the transaction
        date:
          type: string
          format: date-time
          description: The date of the transaction
        entries:
          type: array
          items:
            $ref: '#/components/schemas/TransactionEntry'

    TransactionEntry:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the transaction entry
        account:
          $ref: '#/components/schemas/Account'
        amount:
          type: number
          format: double
          description: The amount of the debit or credit
        entryType:
          type: string
          enum: [Debit, Credit]
          description: The type of entry (either Debit or Credit)
